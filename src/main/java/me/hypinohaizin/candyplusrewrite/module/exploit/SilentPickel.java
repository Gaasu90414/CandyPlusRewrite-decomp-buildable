//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\gaasu\Downloads\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package me.hypinohaizin.candyplusrewrite.module.exploit;

import me.hypinohaizin.candyplusrewrite.CandyPlusRewrite;
import me.hypinohaizin.candyplusrewrite.module.Module;
import me.hypinohaizin.candyplusrewrite.module.combat.CevBreaker;
import me.hypinohaizin.candyplusrewrite.module.combat.CivBreaker;
import me.hypinohaizin.candyplusrewrite.module.combat.PistonAura;
import me.hypinohaizin.candyplusrewrite.setting.Setting;
import me.hypinohaizin.candyplusrewrite.utils.InventoryUtil;
import me.hypinohaizin.candyplusrewrite.utils.Timer;
import net.minecraft.init.Items;
import net.minecraft.network.play.client.CPacketHeldItemChange;
import net.minecraft.util.EnumHand;

public class SilentPickel extends Module {
   public Setting<Float> delay = this.register(new Setting("Delay", 3.0F, 25.0F, 0.0F));
   public Setting<Boolean> noGap = this.register(new Setting("NoGapSwitch", true));
   public Setting<Boolean> noPA = this.register(new Setting("NoPASwitch", true));
   public Timer timer;
   public int oldslot = -1;
   public EnumHand oldhand = null;

   public SilentPickel() {
      super("SilentPickel", Module.Categories.EXPLOIT, false, false);
   }

   public void onEnable() {
      this.timer = new Timer();
   }

   public void onUpdate() {
      if (!this.nullCheck()) {
         int pickel = InventoryUtil.getItemHotbar(Items.DIAMOND_PICKAXE);
         if (pickel != -1) {
            if (mc.player.inventory.getCurrentItem().getItem() != Items.GOLDEN_APPLE || !(Boolean)this.noGap.getValue()) {
               Module pa = CandyPlusRewrite.m_module.getModuleWithClass(PistonAura.class);
               if (!pa.isEnable || !(Boolean)this.noPA.getValue()) {
                  Module cev = CandyPlusRewrite.m_module.getModuleWithClass(CevBreaker.class);
                  Module civ = CandyPlusRewrite.m_module.getModuleWithClass(CivBreaker.class);
                  if (!cev.isEnable && !civ.isEnable) {
                     if (InstantMine.FourZeroFourBlock != null) {
                        if (mc.player.inventory.getCurrentItem().getItem() != Items.DIAMOND_PICKAXE) {
                           this.setItem(pickel);
                        }

                        InstantMine mine = (InstantMine)CandyPlusRewrite.m_module.getModuleWithClass(InstantMine.class);
                        mine.update();
                        this.restoreItem();
                     }

                  }
               }
            }
         }
      }
   }

   public void setItem(int slot) {
      this.oldhand = null;
      if (mc.player.isHandActive()) {
         this.oldhand = mc.player.getActiveHand();
      }

      this.oldslot = mc.player.inventory.currentItem;
      mc.player.connection.sendPacket(new CPacketHeldItemChange(slot));
   }

   public void restoreItem() {
      if (this.oldslot != -1) {
         if (this.oldhand != null) {
            mc.player.setActiveHand(this.oldhand);
         }

         mc.player.connection.sendPacket(new CPacketHeldItemChange(this.oldslot));
         this.oldslot = -1;
         this.oldhand = null;
      }

   }
}
